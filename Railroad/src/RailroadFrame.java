
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author btorralba
 */
public class RailroadFrame extends javax.swing.JFrame implements Observateur {


    private static final ImageIcon DESERT = new ImageIcon("./src/imgs/Texture 100x100/desert.png");
    private static final ImageIcon DESERTSELECTION = new ImageIcon("./src/imgs/Texture 100x100/desertSelection.png");
    
    private static final ImageIcon VILLE = new ImageIcon("./src/imgs/Texture 100x100/ville.png");
    private static final ImageIcon VILLESELECTION = new ImageIcon("./src/imgs/Texture 100x100/villeSelection.png");
    
    
    private static final ImageIcon RAILV = new ImageIcon("./src/imgs/Texture 100x100/railsV.png");
    private static final ImageIcon RAILH = new ImageIcon("./src/imgs/Texture 100x100/railsH.png");
    private static final ImageIcon RAIL = new ImageIcon("./src/imgs/Texture 100x100/railsH.png");
    
    ArrayList<Integer[]> trajet = new ArrayList();
    
    /**
     * Creates new form RailroadFrame
     */
    JLabel[][] jboard;
    Modele modele;
    
    public RailroadFrame(Modele m) {
        initComponents();
        
        modele=m;
        
        
    // Pannel disposé en grille 8*8
        panelJeu.setLayout(new GridLayout(8,8));
        
    // board composé de jlabel    
        jboard = new JLabel[8][8];
         for(int i=0;i<8;i++){
            for(int j=0;j<8;j++){
                // init case desert
                jboard[i][j] = new JLabel(DESERT);
                panelJeu.add(jboard[i][j]);
               jboard[i][j].addMouseListener(
                new CaseControler(i,j));
                }
   
            }
         

         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelJeu = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout panelJeuLayout = new javax.swing.GroupLayout(panelJeu);
        panelJeu.setLayout(panelJeuLayout);
        panelJeuLayout.setHorizontalGroup(
            panelJeuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        panelJeuLayout.setVerticalGroup(
            panelJeuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton1.setText("jButton1 placer rails");
        jButton1.setActionCommand("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelJeu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 494, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelJeu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 385, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Bouton placer rail
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    modele.placerRails(trajet);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RailroadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RailroadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RailroadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RailroadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                
                //new RailroadFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel panelJeu;
    // End of variables declaration//GEN-END:variables

    @Override
    public void avertir(int i, int j) {
        jboard[i][j].setIcon(DESERT);
    }
    
    
    @Override
    public void avertirChangementCase(int i, int j, Case c) {
        jboard[i][j].setIcon(c.getTexture());
    }
    
    
    @Override
    public void avertirPlacementRailH(int i, int j, Case c) {
        jboard[i][j].setIcon(((Rail) c).getRailH());
    }
    
    @Override
    public void avertirPlacementRailV(int i, int j, Case c) {
    jboard[i][j].setIcon(((Rail) c).getRailV());
    }
     
        @Override
        public void avertirPlacementRailVirage1(int i, int j, Case c) {
        jboard[i][j].setIcon(((Rail) c).getRailVirage1());
    }
        @Override
        public void avertirPlacementRailVirage2(int i, int j, Case c) {
        jboard[i][j].setIcon(((Rail) c).getRailVirage2());
    }
        @Override
        public void avertirPlacementRailVirage3(int i, int j, Case c) {
        jboard[i][j].setIcon(((Rail) c).getRailVirage3());
    }
        @Override
        public void avertirPlacementRailVirage4(int i, int j, Case c) {
        jboard[i][j].setIcon(((Rail) c).getRailVirage4());
    }
    
    
    
    
    //Mouvement souris
     class CaseControler extends MouseAdapter {
        int i;
        int j;

        public CaseControler(int _i, int _j){
            i = _i;
            j = _j;
        }

    //action de clic
        @Override
        public void mouseClicked(MouseEvent e)
        {
            System.out.println(i + " " + j);
            
            if (jboard[i][j].getIcon()==DESERT){
               jboard[i][j].setIcon(DESERTSELECTION); 
            }
            
            else if (jboard[i][j].getIcon()==DESERTSELECTION){
                jboard[i][j].setIcon(DESERT);
            }
            
            else if (modele.getCase(i, j) instanceof Ville && jboard[i][j].getIcon()==modele.getCase(i, j).getTexture()){
                jboard[i][j].setIcon(modele.getCase(i, j).getTextureSelection());
            }
            
            else if (modele.getCase(i, j) instanceof Ville && jboard[i][j].getIcon()==modele.getCase(i, j).getTextureSelection()){
                jboard[i][j].setIcon(modele.getCase(i, j).getTexture());
            }
 
            Integer tab[] = {i,j};
            trajet.add(tab);
     
        }
     }

}
